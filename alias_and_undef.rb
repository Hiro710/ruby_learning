=begin
  既に存在するメソッドに別名を割り当てたい場合にaliasを使う。
  aliasの引数にはメソッド名かシンボル名を指定する。
  alias 別名 元の名前 # メソッド名をそのまま書いた場合
  alias :別名 :元の名前 # シンボルを使った場合

  Array#sizeメソッドとArray#lengthメソッドの様に、同じ
  機能を複数の名前で提供する場合に使う。
  また、既に存在するメソッドの定義を変更する場合に、
  元のメソッドを別名で呼び出せる様に保存しておくためにも使える。

  以下の例ではクラスC1とクラスC1を継承したクラスC2を定義。
  クラスC2では、helloメソッドにold_helloという別名で
  helloメソッドを再定義している。
-----------------------------------------------------
  定義されたメソッドをなかったことにしたい時は、undefを使う。
  これもaliasと同様にメソッド名かシンボル名を指定する。
  undef メソッド名 # メソッド名をそのまま書いた場合
  undef シンボル名 :元の名前 # シンボルを使った場合

  スーパークラスで提供するメソッドをサブクラスでは削除する、
  といった用途で使う。
-----------------------------------------------------
=end

class C1
  def hello
    "Hello"
  end
end

class C2 < C1
  alias old_hello hello   # 別名old_helloを設定

  def hello               # helloを再定義
    "#{old_hello}, again"
  end
end

obj = C2.new

p obj.old_hello           # => "Hello"
p obj.hello               # => "Hello, again"